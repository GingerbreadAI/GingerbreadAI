import requests

def burn_token(user_address, token_amount, reward_percentage, reward_token_address, developer_wallet, solana_api_key):
    """
    Burn user-generated GINGERBREAD token and reward the user with a percentage
    of the developer's specific token balance (from developer's wallet).

    Args:
    - user_address (str): User's wallet address.
    - token_amount (int): Number of tokens the user wants to burn.
    - reward_percentage (float): Percentage of the developer's token balance to reward the user.
    - reward_token_address (str): The token address for the specific token to be rewarded.
    - developer_wallet (str): The wallet address of the developer (from which the reward is given).
    - solana_api_key (str): Solana API key for interacting with the blockchain.

    Returns:
    - str: Result message indicating success or failure.
    """
    # Step 1: Burn the user's tokens
    burn_url = f"https://api.solana.com/burn?user={user_address}&amount={token_amount}&api_key={solana_api_key}"
    burn_response = requests.post(burn_url)

    if burn_response.status_code == 200:
        # Step 2: Query the developer's wallet for their specific token balance
        balance_url = f"https://api.solana.com/balance?user={developer_wallet}&token_address={reward_token_address}&api_key={solana_api_key}"
        balance_response = requests.get(balance_url)

        if balance_response.status_code == 200:
            # Extract the total token balance of the specific reward token (e.g., GINGERBREAD Token)
            balance_data = balance_response.json()
            developer_balance = balance_data.get("balance", 0)

            # Calculate the reward based on the percentage of the developer's token balance
            reward_amount = developer_balance * reward_percentage / 100

            # Step 3: Transfer the reward token to the user's wallet
            reward_url = f"https://api.solana.com/transfer?user={user_address}&amount={reward_amount}&token_address={reward_token_address}&api_key={solana_api_key}"
            reward_response = requests.post(reward_url)

            if reward_response.status_code == 200:
                return f"Burn successful! You've been rewarded with {reward_amount} of {reward_token_address}, which is {reward_percentage}% of the developer's balance."
            else:
                return "Burn successful, but reward distribution failed."
        else:
            return "Failed to retrieve developer's wallet balance for the specified token. Please try again."
    else:
        return "Burn failed. Please try again."

